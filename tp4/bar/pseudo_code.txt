senario

tab_clients
tab_barmans
tab_bouteilles

etat_client :
THINKING : pense a la boison qu'il veulent acheters
wait : attend qu'un barman soit libre peut importe
SERVED : attend que le barman lui serve
bois : temps définit
paye : paye ses cosomations

etat_barman :
DISPONIBLE : sans client, dans l'attente de servir
waiting : dans l'attente que le nombre de bouteille se libère
busy : concocte la boisson = un temps definit

etat_bouteilles :
busy :
disonibles :

Idée :
deux tableaux de threas
	clients[]
	barman[]
	
f_client() {
	while(nb_boisson) {	
		//Time for thinking
		int think_time = rand() % THINK_TIME;
		sleep(think_time);
		
        take_barman(nb_client);
		
		//Drink
		sleep(DRINK_TIME);
		
		nb_boisson_drank++;
	}
	sleep(paiment);
}

f_barman() {
	while(bar_close) {	
		si il est busy
			//sleep(time Coktail)
		//
	}
	sleep(clean_bar);
	
}

take_barman(nb_client) {
	
	pthread_mutex_lock (&m);  
	
   
	client_state[nb_philo] = WAITING;
	//Show states tables
	printf("Client wait barman \n",nb_client);
	print_client();
   
	//Check if one barman is free
    while (state_barman[i] != DISPONIBLE) {
		if (i == nb_barman) {
			i = 0;
		}
		pthread_cond_wait (&cv[nb_philo],&m);
		i++;
	}
	
	client_state[nb_client] = SERVED;
	
	//Show states tables
	printf("Client %d ask his drinking choice\n",nb_philo);
	print();
	
	pthread_mutex_unlock (&m);
}


main () {
	init_etat_client() //Thinking
	init_etat_philos() //Ready
}

